plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
    id 'org.jetbrains.dokka' version '1.4.0'
}

repositories {
    jcenter()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "14"
    }
}

dependencies {
    dokkaHtmlPlugin 'org.jetbrains.dokka:kotlin-as-java-plugin:1.4.0'

    implementation 'commons-logging:commons-logging:1.2'
    implementation 'org.slf4j:slf4j-log4j12:1.7.30'
    
//    implementation 'com.google.guava:guava:29.0-jre'
//    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
//    implementation 'commons-beanutils:commons-beanutils:1.9.4'
//    implementation 'commons-codec:commons-codec:1.15'
//    implementation 'org.apache.commons:commons-configuration2:2.7'
//    implementation 'org.apache.commons:commons-csv:1.8'
//    implementation 'org.apache.commons:commons-lang3:3.11'
//    implementation 'org.apache.commons:commons-text:1.9'
}

jar {
    archivesBaseName = project.name
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    manifest {
        attributes 'Main-Class': 'ch.konnexions.orabench.OraBenchKt'
    }
}

task fatJar(type: Jar) {
    group = "Konnexions"
    description = 'Create a jar file including all dependencies'
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates

    manifest.from jar.manifest
    archiveClassifier.set("all")
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

task copyJarToLib(type: Copy, dependsOn: 'fatJar') {
    group = "Konnexions"
    description = 'Copy the jar file to the lib directory'

    from "$buildDir/libs"
    rename project.name + '-all.jar', project.name + '.jar'
    into "../priv/kotlin_jar"
}
